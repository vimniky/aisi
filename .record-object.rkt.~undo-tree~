"8800058d1159ed4e4a64859334b9d68069c52ff4"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((650 . 651) 541) nil (22074 7142 180242 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 506) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . 1) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (undo-tree-id221 . 1) (undo-tree-id222 . 1) (undo-tree-id223 . 1) (undo-tree-id224 . 1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . 1) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . 1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . 1) (undo-tree-id241 . 1) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . 1)) nil (22074 7142 180289 0) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 512) (undo-tree-id246 . -1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . -1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . -1)) nil (22074 7142 180303 0) 0 nil]) ((#("f" 0 1 (fontified t)) . 506) (undo-tree-id257 . 1) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . 1) (undo-tree-id285 . 1) (undo-tree-id286 . 1)) nil (22074 7142 180334 0) 0 nil]) ((#("(vector-re" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 10 (fontified t)) . 506) (undo-tree-id287 . -9) (undo-tree-id288 . -9) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . 2) (undo-tree-id332 . 2) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . 2) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . 4) (undo-tree-id341 . 10) (undo-tree-id342 . -1) (undo-tree-id343 . 5) (undo-tree-id344 . 6) (undo-tree-id345 . 7) (undo-tree-id346 . 8) (undo-tree-id347 . 9) (undo-tree-id348 . 10) (undo-tree-id349 . 10) (undo-tree-id350 . -10) (undo-tree-id351 . 10) (undo-tree-id352 . -9) (undo-tree-id353 . 9) (undo-tree-id354 . 8) (undo-tree-id355 . 7) (undo-tree-id356 . 6) (undo-tree-id357 . 5) (undo-tree-id358 . 4) (undo-tree-id359 . 3) (undo-tree-id360 . 2) (undo-tree-id361 . 1) (undo-tree-id362 . 1) (undo-tree-id363 . 2) (undo-tree-id364 . 3) (undo-tree-id365 . 2) (undo-tree-id366 . 1) 515) nil (22074 7142 180416 0) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 654) (undo-tree-id367 . 1) (undo-tree-id368 . -1) (undo-tree-id369 . 1) (undo-tree-id370 . 1) (undo-tree-id371 . 1) (undo-tree-id372 . 1) (undo-tree-id373 . -1)) nil (22074 7142 180430 0) 0 nil]) ((#("(vector-ref" 0 1 (fontified t face (rainbow-delimiters-depth-4-face)) 1 11 (fontified t)) . 648) (undo-tree-id374 . -10) (undo-tree-id375 . -10) (undo-tree-id376 . 11) (undo-tree-id377 . -1) (undo-tree-id378 . 11) (undo-tree-id379 . 10) (undo-tree-id380 . 9) (undo-tree-id381 . 8) (undo-tree-id382 . 7) (undo-tree-id383 . 6) (undo-tree-id384 . 5) (undo-tree-id385 . 4) (undo-tree-id386 . 3) (undo-tree-id387 . 2) (undo-tree-id388 . 1) (undo-tree-id389 . 1) (undo-tree-id390 . 2) (undo-tree-id391 . 3) (undo-tree-id392 . 4) (undo-tree-id393 . 5) (undo-tree-id394 . 6) (undo-tree-id395 . 7) (undo-tree-id396 . 8) (undo-tree-id397 . 9) (undo-tree-id398 . 10) (undo-tree-id399 . 11) (undo-tree-id400 . -11) (undo-tree-id401 . 11) (undo-tree-id402 . -10) (undo-tree-id403 . 10) (undo-tree-id404 . 9) (undo-tree-id405 . 8) (undo-tree-id406 . 7) (undo-tree-id407 . 6) (undo-tree-id408 . 5) (undo-tree-id409 . 4) (undo-tree-id410 . 3) (undo-tree-id411 . 2) (undo-tree-id412 . 1) 658) nil (22074 7142 180473 0) 0 nil]) ((664 . 665) (#("1" 0 1 (rear-nonsticky t fontified t face highlight-numbers-number)) . 664) (undo-tree-id413 . 1)) nil (22074 7142 180480 0) 0 nil]) ((550 . 551) (#("x" 0 1 (fontified t face font-lock-function-name-face)) . 550) (undo-tree-id414 . 1)) nil (22074 7142 180483 0) 0 nil]) ((nil rear-nonsticky nil 534 . 535) (nil fontified nil 534 . 535) (#("
" 0 1 (fontified nil)) . -675) (534 . 676) 649 (#("
(define (point-y! obj)
  (if (not (point? obj))
      (error \"obj is not a point type\")
      (vector-ref obj 2)))" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-2-face)) 10 16 (fontified t face font-lock-function-name-face) 16 18 (fontified t face font-lock-function-name-face) 18 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-2-face)) 23 24 (fontified t) 24 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-2-face)) 27 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-4-face)) 36 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-4-face)) 47 48 (fontified t face (rainbow-delimiters-depth-3-face)) 48 49 (fontified t) 49 55 (fontified t) 55 56 (fontified t face (rainbow-delimiters-depth-3-face)) 56 62 (fontified t) 62 87 (fontified t face font-lock-string-face) 87 88 (fontified t face (rainbow-delimiters-depth-3-face)) 88 89 (fontified t) 89 95 (fontified t) 95 96 (fontified t face (rainbow-delimiters-depth-3-face)) 96 111 (fontified t) 111 112 (fontified t face highlight-numbers-number) 112 113 (fontified t face (rainbow-delimiters-depth-3-face)) 113 114 (fontified t face (rainbow-delimiters-depth-2-face)) 114 115 (fontified t face (rainbow-delimiters-depth-1-face))) . 534) (undo-tree-id415 . -115) (undo-tree-id416 . -1) (undo-tree-id417 . -22) (undo-tree-id418 . -110) (undo-tree-id419 . 115) (undo-tree-id420 . 20) (undo-tree-id421 . -96) (undo-tree-id422 . 3) (undo-tree-id423 . -113) (undo-tree-id424 . 89) (undo-tree-id425 . -27) (undo-tree-id426 . 2) (undo-tree-id427 . -114) (undo-tree-id428 . 115) (undo-tree-id429 . 93) (undo-tree-id430 . -1) (undo-tree-id431 . -115) (undo-tree-id432 . 93) (undo-tree-id433 . -22) (undo-tree-id434 . -22) (undo-tree-id435 . -110) (undo-tree-id436 . 70) (undo-tree-id437 . -22) (undo-tree-id438 . 45) (undo-tree-id439 . -22) (undo-tree-id440 . 5) (undo-tree-id441 . -22) (undo-tree-id442 . 5) (undo-tree-id443 . -22) (undo-tree-id444 . 114) (undo-tree-id445 . -2) (undo-tree-id446 . 1) (undo-tree-id447 . -115) 649) nil (22074 7142 180517 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -530) (524 . 531)) nil (22074 7142 180522 0) 0 nil]) ((#("j" 0 1 (fontified t face highlight-numbers-number)) . -523) (523 . 524) 522) nil (22074 7142 180524 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -518) (509 . 519) (#("r" 0 1 (fontified t)) . -509) (509 . 510) (507 . 509)) nil (22074 7142 180527 0) 0 nil]) ((nil rear-nonsticky nil 511 . 512) (nil fontified nil 507 . 512) (507 . 512) 506) nil (22074 7142 180529 0) 0 nil]) ((#("obj 1" 0 4 (fontified t) 4 5 (fontified t face highlight-numbers-number)) . 508) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . 1) (undo-tree-id451 . 2) (undo-tree-id452 . 3) (undo-tree-id453 . 4) (undo-tree-id454 . 5) (undo-tree-id455 . 5) (undo-tree-id456 . 5) (undo-tree-id457 . 5) (undo-tree-id458 . 5) (undo-tree-id459 . -5) (undo-tree-id460 . 5) (undo-tree-id461 . -4) (undo-tree-id462 . 4) (undo-tree-id463 . 3) (undo-tree-id464 . 2) (undo-tree-id465 . 1) 512) nil (22074 7142 180546 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -507) (507 . 508) (506 . 508) (#("(" 0 1 (fontified nil)) . -506) (506 . 507)) nil (22074 7142 180552 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -506) (506 . 507) 505) nil (22074 7142 180554 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -420) (414 . 421)) nil (22074 7142 180556 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -499) (488 . 500) (#("vector-se" 0 9 (fontified t)) . -488) (undo-tree-id466 . 3) (undo-tree-id467 . 4) (undo-tree-id468 . 5) (undo-tree-id469 . 6) (undo-tree-id470 . 7) (undo-tree-id471 . 8) (undo-tree-id472 . 7) (undo-tree-id473 . 6) (undo-tree-id474 . 5) (undo-tree-id475 . 4) (undo-tree-id476 . 3) (495 . 497) (#("r" 0 1 (fontified t)) . -495) (undo-tree-id477 . 1) (undo-tree-id478 . 1) (#("e" 0 1 (fontified t)) . -496) (undo-tree-id479 . 1) (undo-tree-id480 . 1) (#("f" 0 1 (fontified t)) . -497) (undo-tree-id481 . 1) (undo-tree-id482 . 1) (undo-tree-id483 . 1) (undo-tree-id484 . 1)) nil (22074 7142 180576 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-function-name-face)) . -526) (526 . 527) (#("j" 0 1 (fontified t face font-lock-function-name-face)) . -526) (#("k" 0 1 (fontified t face font-lock-function-name-face)) . -527) (#("k" 0 1 (fontified t face font-lock-function-name-face)) . -528) (526 . 529) (#("j" 0 1 (fontified t face font-lock-function-name-face)) . -526) (525 . 527)) nil (22074 7142 180582 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-function-name-face)) . -410) (410 . 411) (#("j" 0 1 (fontified t face font-lock-function-name-face)) . -410) (#("k" 0 1 (fontified t face font-lock-function-name-face)) . -411) (410 . 412) (#("j" 0 1 (fontified t face font-lock-function-name-face)) . -410) (409 . 411)) nil (22074 7142 180587 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 141) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . 1) (undo-tree-id488 . 1)) nil (22074 7142 180593 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -144) (144 . 145) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -144) (143 . 145)) nil (22074 7142 180595 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -130) (130 . 131) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -130) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -131) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -132) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -133) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -134) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -135) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -136) (136 . 137) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -136) (135 . 137) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -135) (134 . 136) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -134) (133 . 135) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -133) (132 . 134) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -132) (130 . 133) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -130) (129 . 131)) nil (22074 7142 180604 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -383) (382 . 384)) nil (22074 7142 180609 0) 0 nil] [nil ([nil nil ((#("j" 0 1 (fontified t)) . -432) (431 . 433)) ((#("kj" 0 1 (fontified nil) 1 2 (fontified nil)) . 431) (undo-tree-id207 . 2) (undo-tree-id208 . -1) (undo-tree-id209 . -2) (432 . 433)) (22074 6951 685336 0) 0 nil]) ((381 . 421) (390 . 391) 381) ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 390) (undo-tree-id210 . 1) (#("                                        " 0 40 (fontified t)) . 381)) (22074 6951 685539 0) 0 nil] [nil nil ((381 . 421) (390 . 391) 381) ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 390) (undo-tree-id206 . 1) (#("                                        " 0 40 (fontified t)) . 381)) (22074 6945 392643 0) 0 nil]) ((nil rear-nonsticky nil 390 . 391) (nil fontified nil 390 . 391) (nil fontified nil 383 . 390) (nil fontified nil 381 . 383) (#("
" 0 1 (fontified nil)) . -619) (390 . 620) 381) nil (22074 6952 376758 0) 0 nil]) ((379 . 380) 361) nil (22074 6945 392651 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -389) (388 . 390)) nil (22074 6945 392653 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -150) (149 . 151) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -149) (146 . 150)) nil (22074 6945 392655 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -384) (376 . 385) (#("
" 0 1 (fontified t)) . -376) (376 . 377)) nil (22074 6945 392658 0) 0 nil]) ((139 . 140) 131) nil (22074 6945 392660 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -145) (141 . 146) (#("g" 0 1 (fontified t face font-lock-comment-face)) . -141) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -142) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -143) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -144) (141 . 145) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -141) (140 . 142)) nil (22074 6945 392664 0) 0 nil]) ((139 . 140) 127 (t 22074 6888 0 0)) nil (22074 6945 392668 0) 0 nil]) ((368 . 369) 254) nil (22074 6888 956548 0) 0 nil]) ((364 . 365) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 364) (undo-tree-id98 . 1)) nil (22074 6888 956558 0) 0 nil]) ((270 . 271) (#("x" 0 1 (fontified t face font-lock-function-name-face)) . 270) (undo-tree-id99 . 1)) nil (22074 6888 956562 0) 0 nil]) ((nil rear-nonsticky nil 254 . 255) (nil fontified nil 254 . 255) (#("
" 0 1 (fontified nil)) . -368) (254 . 369)) nil (22074 6888 956564 0) 0 nil]) ((#("j" 0 1 (fontified t face highlight-numbers-number)) . -250) (250 . 251) (#("j" 0 1 (fontified t face highlight-numbers-number)) . -250) (#("k" 0 1 (fontified t face highlight-numbers-number)) . -251) (#("k" 0 1 (fontified t face highlight-numbers-number)) . -252) (250 . 253) (#("j" 0 1 (fontified t face highlight-numbers-number)) . -250) (250 . 251) (#("j" 0 1 (fontified t face highlight-numbers-number)) . -250) (#("k" 0 1 (fontified t face highlight-numbers-number)) . -251) (250 . 252) (#("j" 0 1 (fontified t face highlight-numbers-number)) . -250) (247 . 251) (#("j" 0 1 (fontified t)) . -247) (244 . 248) (234 . 244) (#("vec" 0 3 (fontified t)) . -234) (236 . 237) (234 . 236) (233 . 235) (#("(" 0 1 (fontified nil)) . -233) (233 . 234) (226 . 233) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 226) (undo-tree-id100 . 1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . 1) (undo-tree-id104 . 1) (undo-tree-id105 . 1) (undo-tree-id106 . 1) (undo-tree-id107 . 1) (undo-tree-id108 . 1) (undo-tree-id109 . 1) (undo-tree-id110 . 1) (undo-tree-id111 . 1) (undo-tree-id112 . 1) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (undo-tree-id115 . 1) (undo-tree-id116 . 1) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (undo-tree-id119 . 1) (undo-tree-id120 . 1) (undo-tree-id121 . 1) (undo-tree-id122 . 1) (undo-tree-id123 . 1) (undo-tree-id124 . 1) (undo-tree-id125 . 1) (undo-tree-id126 . 1) (undo-tree-id127 . 1) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . 1) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (undo-tree-id133 . 1) (undo-tree-id134 . 1) (undo-tree-id135 . 1) (undo-tree-id136 . 1) (undo-tree-id137 . -1) (225 . 226) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 225) (undo-tree-id138 . -1) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (undo-tree-id147 . 1) (undo-tree-id148 . 1) (undo-tree-id149 . 1) (undo-tree-id150 . 1) (undo-tree-id151 . 1) (undo-tree-id152 . 1) (undo-tree-id153 . 1) (undo-tree-id154 . 1) (undo-tree-id155 . 1) (undo-tree-id156 . 1) (undo-tree-id157 . 1) (undo-tree-id158 . 1) (undo-tree-id159 . 1) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . 1) (undo-tree-id163 . 1) (undo-tree-id164 . 1) (undo-tree-id165 . 1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1) (220 . 225) (#("o" 0 1 (fontified t face font-lock-string-face)) . -220) (#("b" 0 1 (fontified t face font-lock-string-face)) . -221) (#("j" 0 1 (fontified t face font-lock-string-face)) . -222) (222 . 223) (#("j" 0 1 (fontified t face font-lock-string-face)) . -222) (212 . 223) (203 . 212) (#("j" 0 1 (fontified t face font-lock-string-face)) . -203) (201 . 204) (200 . 202) (#("\"" 0 1 (fontified nil)) . -200) (196 . 201) (194 . 196) (193 . 195) (#("(" 0 1 (fontified nil)) . -193) (193 . 194) (186 . 193) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 186) (undo-tree-id169 . 1) (undo-tree-id170 . -1) (185 . 186) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 185) (undo-tree-id171 . 1) (undo-tree-id172 . -1) (184 . 185) (183 . 184) (#("j" 0 1 (fontified t)) . -183) (176 . 184) (174 . 176) (173 . 175) (#("(" 0 1 (fontified nil)) . -173) (173 . 174) (#("o" 0 1 (fontified t)) . -173) (171 . 174) (169 . 171) (168 . 170) (#("(" 0 1 (fontified nil)) . -168) (165 . 169) (164 . 166) (#("(" 0 1 (fontified nil)) . -164) (164 . 165) (161 . 164)) nil (22074 6888 956651 0) 0 nil]) ((nil rear-nonsticky nil 110 . 111) (nil fontified nil 110 . 111) (110 . 111) 109) nil (22074 6888 956667 0) 0 nil]) ((#("b" 0 1 (fontified t)) . 109) (undo-tree-id173 . 1)) nil (22074 6888 956669 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -112) (111 . 113) (#("j" 0 1 (fontified t)) . -111) (109 . 112) (#("a" 0 1 (fontified t)) . -109) (undo-tree-id174 . 1) (undo-tree-id175 . 1) (#("r" 0 1 (fontified t)) . -110) (undo-tree-id176 . 1) (#("i" 0 1 (fontified t)) . -111) (#("w" 0 1 (fontified t)) . -112) (112 . 113) (111 . 112) (#("g" 0 1 (fontified t)) . 111) (undo-tree-id177 . 1)) nil (22074 6888 956677 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -88) (87 . 89) (#("j" 0 1 (fontified t)) . -87) (85 . 88) (#("i" 0 1 (fontified t)) . -85) (85 . 86) (#("arg" 0 3 (fontified t)) . 85) (undo-tree-id178 . 1) (undo-tree-id179 . 2) (undo-tree-id180 . 3)) nil (22074 6888 956685 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -160) (159 . 161) (#("j" 0 1 (fontified t)) . -159) (157 . 160) (#("arg" 0 3 (fontified t)) . 157) (undo-tree-id181 . 1) 159) nil (22074 6888 956690 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -161) (161 . 162) (#(")" 0 1 (fontified nil)) . -160) (159 . 161) (157 . 159) (#("obj" 0 3 (fontified t)) . 157) (undo-tree-id182 . 1) 159) nil (22074 6888 956695 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -161) (161 . 162) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 161) (undo-tree-id183 . 1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . -1) (160 . 161) (159 . 160) (#("j" 0 1 (fontified t)) . -159) (151 . 160) (149 . 151) (148 . 150) (#("(" 0 1 (fontified nil)) . -148) (143 . 149) (141 . 143) (140 . 142) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -140) (140 . 141) (139 . 140) (127 . 139) (126 . 127)) nil (22074 6888 956724 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -68) (61 . 69)) nil (22074 6888 956729 0) 0 nil]) ((#(" point" 0 6 (fontified t face font-lock-comment-face)) . 9) (undo-tree-id202 . 6) (undo-tree-id203 . 6) (undo-tree-id204 . 6) (undo-tree-id205 . 6)) nil (22074 6888 956734 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -9) (8 . 10)) nil (22074 6888 956736 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -66) (66 . 67) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -66) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -67) (66 . 68) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -66) (63 . 67)) nil (22074 6888 956739 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -121) (120 . 122) 85 (t 22074 6700 0 0)) nil (22074 6888 956742 0) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . 85) (#("j" 0 1 (fontified t)) . -87) (84 . 88) 64 (t 22074 6700 0 0)) ((#("
  j" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 84) (undo-tree-id94 . -1) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -4) (85 . 88)) (22074 6721 884751 0) 0 nil]) ((120 . 121) 64) nil (22074 6721 885062 0) 0 nil]) ((62 . 63) 61) nil (22074 6700 573448 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -116) (113 . 117) (110 . 113) (#(" " 0 1 (fontified nil)) . -110) (110 . 111) (#("'" 0 1 (fontified nil)) . -110) (109 . 111) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 109) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . 1) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . 1) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . -1) (105 . 109) (102 . 105) (92 . 102) (#("vector-re" 0 9 (fontified t)) . -92) (94 . 101) (#("r" 0 1 (fontified t)) . -94) (94 . 95) (92 . 94) (91 . 93) (#("(" 0 1 (fontified nil)) . -91) (91 . 92) (#("a" 0 1 (fontified t)) . -91) (#("r" 0 1 (fontified t)) . -92) (#("g" 0 1 (fontified t)) . -93) (93 . 94) (90 . 93)) nil (22074 6700 573500 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -82) (81 . 83) (78 . 81)) nil (22074 6700 573507 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -87) (87 . 88) (#("p" 0 1 (fontified t)) . -87) (#("o" 0 1 (fontified t)) . -88) (#("i" 0 1 (fontified t)) . -89) (#("n" 0 1 (fontified t)) . -90) (89 . 91) (85 . 89) (83 . 85) (82 . 84) (#("(" 0 1 (fontified nil)) . -82) (82 . 83) (79 . 82) (#(")" 0 1 (fontified nil)) . -78) (78 . 79) (#(" " 0 1 (fontified t)) . -78) (78 . 79)) nil (22074 6700 573513 0) 0 nil]) ((nil rear-nonsticky nil 77 . 78) (nil fontified nil 72 . 78) (72 . 78) 71) nil (22074 6700 573519 0) 0 nil]) ((#("point?" 0 6 (fontified t)) . 73) (undo-tree-id26 . 1) (undo-tree-id27 . 2) (undo-tree-id28 . 3) (undo-tree-id29 . 4) (undo-tree-id30 . 5) (undo-tree-id31 . 6) (undo-tree-id32 . 6) (undo-tree-id33 . 6)) nil (22074 6700 573530 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-function-name-face)) . -72) (72 . 73) (#("j" 0 1 (fontified t face font-lock-function-name-face)) . -72) (#("k" 0 1 (fontified t face font-lock-function-name-face)) . -73) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -74) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -75) (72 . 76) (#("j" 0 1 (fontified t face font-lock-function-name-face)) . -72) (72 . 73) (71 . 73) (#("(" 0 1 (fontified nil)) . -71) (71 . 72)) nil (22074 6700 573535 0) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-function-name-face)) . -77) (73 . 78) (66 . 73) (64 . 66) (63 . 65) (#("(" 0 1 (fontified nil)) . -63) (63 . 64) (62 . 63) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 62) (undo-tree-id34 . -1) (undo-tree-id35 . 1) (undo-tree-id36 . -1) (undo-tree-id37 . 1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1) (undo-tree-id42 . 1) (undo-tree-id43 . 1) (undo-tree-id44 . 1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (61 . 62) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 61) (undo-tree-id56 . 1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . -1) (59 . 61) (#("x" 0 1 (fontified t)) . -59) (53 . 60) (50 . 53) (#(" " 0 1 (fontified nil)) . -50) (50 . 51) (#("'" 0 1 (fontified nil)) . -50) (45 . 51) (43 . 45) (42 . 44) (#("(" 0 1 (fontified nil)) . -42) (42 . 43) (39 . 42) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 39) (undo-tree-id79 . 1) (undo-tree-id80 . -1) (35 . 39) (28 . 35) (24 . 28) (23 . 25) (#("(" 0 1 (fontified nil)) . -23) (18 . 24) (16 . 18) (15 . 17) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -15) (15 . 16) (#("
" 0 1 (fontified t)) . -15) (14 . 16) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -14) (1 . 15) (#("m" 0 1 (fontified t)) . -1) (#("a" 0 1 (fontified t)) . -2) (#("k" 0 1 (fontified t)) . -3) (#("e" 0 1 (fontified t)) . -4) (1 . 5) (#("j" 0 1 (fontified t)) . -1) (#("k" 0 1 (fontified t)) . -2)) nil (22074 6700 573604 0) 0 nil]) ((#("j" 0 1 (fontified t)) . -3) (1 . 4) (#("j" 0 1 (fontified t)) . -1) (1 . 2) (#("h" 0 1 (fontified t)) . -1) (#("j" 0 1 (fontified t)) . -2) (#(" " 0 1 (fontified t)) . -3) (#("t" 0 1 (fontified t)) . -4) (2 . 5) (#("j" 0 1 (fontified t)) . -2) (1 . 3) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3) (1 . 4) (#("()" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id81 . -2) (undo-tree-id82 . 1) (undo-tree-id83 . 2) (undo-tree-id84 . -1) (undo-tree-id85 . 1) (undo-tree-id86 . -2) (undo-tree-id87 . 1) (undo-tree-id88 . 2) (undo-tree-id89 . -1) (undo-tree-id90 . 1) (undo-tree-id91 . -2) (undo-tree-id92 . 1) 2 (#("d" 0 1 (fontified t)) . -2) (2 . 3) (1 . 3) (#("(" 0 1 (fontified nil)) . -1) (1 . 2) (#("d" 0 1 (fontified t)) . -1) (#("e" 0 1 (fontified t)) . -2) (undo-tree-id93 . -1) (1 . 3) (#("
" 0 1 (fontified t)) . -1) (1 . 2) (t . -1)) nil (22074 6700 573636 0) 0 nil]) nil nil (22074 6700 573642 0) 0 nil] #1# 7850 64 nil]